#Perfil da aplicação
spring.profiles.active=local

#Habilitando o modo DEBUG para esse pacote "org.springframework" para visualização
#logging.level.org.springframework=DEBUG

spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=admin

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#Token do append para ser enviado o log para o serviço cloud da Loggly
logging.loggly.token=03130a15-f734-4944-b3e6-324cd7b9aa09

#Tamanho maximo do arquivo para upload, por dafault é 1MB
#spring.servlet.multipart.max-file-size=20KB
#Tamanho maximo da requisição, por dafault é 10MB
#spring.servlet.multipart.max-request-size=20MB

#caminho para salvar as fotos localmente
algafood.storage.local.diretorio-fotos=/Users/nills/Desktop/SalvarFotosProjetos
#Defini qual tipo de armazenamento será utilizado na aplicação
algafood.storage.tipo=local

#Chave de acesso do serviço S3 da Amazon por ser chave de segurança ela está sendo definida por parametro por config externas
#algafood.storage.s3.id-chave-acesso=
#Chave secreta de acesso do serviço S3 da Amazon por ser chave de segurança ela está sendo definida por parametro por config externas
#algafood.storage.s3.chave-acesso-secreta=
#Nome do bucket do serviço S3 da Amazon
algafood.storage.s3.bucket=algafood-nillsousa
#codigo da regiao onde o bucket do serviço S3 da Amazon estar criado
algafood.storage.s3.regiao=us_east_1
#Nome da pasta criada dentro do bucket do serviço S3 da Amazon
algafood.storage.s3.diretorio-fotos=catalogo

#Nome do remetente do envio do e-mail
algafood.email.remetente=Algafoods <nillsousadev026@gmail.com>
#Especificar o endereço do servidor SMTP
spring.mail.host=smtp.sendgrid.net
#Especificar a porta do servidor SMTP
spring.mail.port=587
#No caso do sendgrid sempre iremos colocar "apikey"
spring.mail.username=apikey
#Senha gerada no sendgrid
#spring.mail.password=

#Configurando uma localidade para o freemarker trabalha com padroes brasileiros assim como formatação monetaria
spring.freemarker.settings.locale=pt_BR

#Configuração para selecionar qual tipo de serviço será chamado para o envio de e-mail
# fake = simular o envio printando no log cenário de teste
# smtp = faz o envio real cenario de produção
# sandbox = simular o envio com um destinatario pré-configurado
algafood.email.impl=fake

#Configuração de email de teste para fazer a simulação do serviço de envio de email
algafood.email.sandbox.destinatario=nillsousadev026@gmail.com

#Habilitar o springFox
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# Gzip para compressão das respostas da API
server.compression.enabled=true

#Configura o login e senha para acesso os endpoint da aplicação (Util para fase de implementação/Teste)
spring.security.user.name=algafood
spring.security.user.password=12345

#Especificando o caminho do arquivo algafood-pkey contendo a chave publica gerada a partir do authorization server
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem
algafood.jwt.keystore.jks-location=classpath:keys/algafood.jks
algafood.jwt.keystore.password=123456
algafood.jwt.keystore.keypair-alias=algafood
