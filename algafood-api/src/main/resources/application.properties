#Perfil da aplicação
spring.profiles.active=local

#Habilitando o modo DEBUG para esse pacote "org.springframework" para visualização
#logging.level.org.springframework=DEBUG

spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=admin

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#Token do append para ser enviado o log para o serviço cloud da Loggly
logging.loggly.token=03130a15-f734-4944-b3e6-324cd7b9aa09

#Tamanho maximo do arquivo para upload, por dafault é 1MB
#spring.servlet.multipart.max-file-size=20KB
#Tamanho maximo da requisição, por dafault é 10MB
#spring.servlet.multipart.max-request-size=20MB

#caminho para salvar as fotos localmente
algafood.storage.local.diretorio-fotos=/Users/nills/Desktop/SalvarFotosProjetos
#Defini qual tipo de armazenamento será utilizado na aplicação
algafood.storage.tipo=local

#Chave de acesso do serviço S3 da Amazon por ser chave de segurança ela está sendo definida por parametro por config externas
#algafood.storage.s3.id-chave-acesso=
#Chave secreta de acesso do serviço S3 da Amazon por ser chave de segurança ela está sendo definida por parametro por config externas
#algafood.storage.s3.chave-acesso-secreta=
#Nome do bucket do serviço S3 da Amazon
algafood.storage.s3.bucket=algafood-nillsousa
#codigo da regiao onde o bucket do serviço S3 da Amazon estar criado
algafood.storage.s3.regiao=us_east_1
#Nome da pasta criada dentro do bucket do serviço S3 da Amazon
algafood.storage.s3.diretorio-fotos=catalogo

#Nome do remetente do envio do e-mail
algafood.email.remetente=Algafoods <nillsousadev026@gmail.com>
#Especificar o endereço do servidor SMTP
spring.mail.host=smtp.sendgrid.net
#Especificar a porta do servidor SMTP
spring.mail.port=587
#No caso do sendgrid sempre iremos colocar "apikey"
spring.mail.username=apikey
#Senha gerada no sendgrid
#spring.mail.password=

#Configurando uma localidade para o freemarker trabalha com padroes brasileiros assim como formatação monetaria
spring.freemarker.settings.locale=pt_BR

#Configuração para selecionar qual tipo de serviço será chamado para o envio de e-mail
# fake = simular o envio printando no log cenário de teste
# smtp = faz o envio real cenario de produção
# sandbox = simular o envio com um destinatario pré-configurado
algafood.email.impl=fake

#Configuração de email de teste para fazer a simulação do serviço de envio de email
algafood.email.sandbox.destinatario=nillsousadev026@gmail.com

#Habilitar o springFox
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# Gzip para compressão das respostas da API
server.compression.enabled=true

#Configura o login e senha para acesso os endpoint da aplicação (Util para fase de implementação/Teste)
spring.security.user.name=algafood
spring.security.user.password=12345

#Especificando o caminho do arquivo algafood-pkey contendo a chave publica gerada a partir do authorization server
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json
algafood.jwt.keystore.jks-location=base64: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
algafood.jwt.keystore.password=123456
algafood.jwt.keystore.keypair-alias=algafood

